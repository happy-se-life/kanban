<div>  
  <% 
    # Direct data build.

    # Get user
    @current_user = User.current    

    # Get all status order by position
    @issue_statuses = IssueStatus.all.order("position ASC")
    @issue_statuses_hash = {}
    @issue_statuses.each {|issue_status|
      @issue_statuses_hash[issue_status.id.to_i] = issue_status.name
    }

    # Get statuses for issue done
    @done_issue_statuses = IssueStatus.where(is_closed: 1)
    @done_issue_statuses_array = []
    @done_issue_statuses.each {|issue_status|
      @done_issue_statuses_array << issue_status.id
    }
    
    # Array of status ID for display
    @status_fields_array = Constants::DEFAULT_STATUS_FIELD_VALUE_ARRAY

    # Get projects for current user
    @user_projects = Project.visible(@current_user).order(:name)

    # Declaring variables
    @issues_hash = {}

    # Get issues using status loop
    @status_fields_array.each {|status_id|
      if @done_issue_statuses_array.include?(status_id) == false then
        # Case not done status
        issues = Issue.where(assigned_to_id: @current_user).where(status: status_id)

        @issues_hash[status_id] = issues.order(updated_on: "DESC").limit(Constants::SELECT_LIMIT)
      else
        # Case done status
        issues = Issue.where(assigned_to_id: @current_user).where(status: status_id)

        @issues_hash[status_id] = issues.order(updated_on: "DESC").limit(Constants::SELECT_LIMIT)
      end
    }

    # Count issues
    @issues_count = 0
    @issues_hash.each {|status_id, issues|
      @issues_count += issues.count
    }
  %>

  <!-- CSS -->
  <%= stylesheet_link_tag 'kanban', :plugin => 'kanban' %>

  <h3>Kanban (<%= @issues_count %>)</h3>

  <!-- Kanban Table -->
  <div class="kanban-table">
    <table class="list issues">
      <thead>
        <tr>
          <th><%= I18n.t(:field_project) %></th>
          <% @status_fields_array.each do |status_id| %>
            <th><%= @issue_statuses_hash[status_id] %></th>
          <% end %>
        </tr>
      </thead>
      <tbody>
        <% @user_projects.each do |project| %>
          <tr>
            <td class="project-name" data-project-id="<%= project.id %>"><%= link_to project.name, project_path(project), class: 'project-link' %></td>
            <% @status_fields_array.each do |status_id| %>
              <td class="kanban-column" data-status-id="<%= status_id %>" data-project-id="<%= project.id %>">
                <% 
                  # Get issues for this project and status
                  project_issues = @issues_hash[status_id].select { |issue| issue.project_id == project.id }
                %>
                <% project_issues.each do |issue| %>
                  <% 
                    # Determine CSS class based on priority
                    priority_class = if issue.priority_id >= Constants::DEFAULT_HIGH_PRIORITY_ISSUE_ID
                                      'my-issue-card-high-priority'
                                    elsif issue.priority_id == Constants::DEFAULT_NORMAL_PRIORITY_ISSUE_ID
                                      'my-issue-card'
                                    else
                                      'my-issue-card-low-priority'
                                    end
                  %>
                  <div class="<%= priority_class %>" data-issue-id="<%= issue.id %>">
                    <div class="issue-header">
                      <span class="issue-tracker"><%= issue.tracker.name %></span> <span class="issue-id">#<%= issue.id %></span>
                    </div>
                    <div class="issue-title">
                      <%= link_to issue.subject, issue_path(issue), class: 'issue-link' %>
                    </div>
                    <hr class="">
                    <div class="issue-details">
                      <span class="issue-due-date">
                        <% if issue.due_date %>
                          Due: <%= issue.due_date.strftime('%m/%d') %>
                        <% else %>
                          Due: -
                        <% end %>
                      </span>
                      <span class="issue-estimated-hours">
                        <% if issue.estimated_hours %>
                          Est: <%= issue.estimated_hours %>h
                        <% else %>
                          Est: -
                        <% end %>
                      </span>
                    </div>
                  </div>
                <% end %>
              </td>
            <% end %>
          </tr>
        <% end %>
      </tbody>
    </table>
  </div>

  <style>
    .kanban-table {
      margin-top: 20px;
    }
    
    .kanban-table table {
      width: 100%;
      border-collapse: collapse;
    }
    
    .kanban-table th,
    .kanban-table td {
      border: 1px solid #ddd;
      padding: 10px;
      vertical-align: top;
    }
    
    .kanban-table th {
      background-color: #f5f5f5;
      font-weight: bold;
      text-align: center;
    }
    
    .project-name {
      min-width: 150px;
    }
    
    .kanban-column {
      min-width: 200px;
      min-height: 100px;
    }
    
    .issue-header {
      margin-bottom: 4px;
    }
    
    .issue-tracker {
      font-size: 12px;
      color: #000000;
    }
    
    .issue-id {
      font-size: 12px;
      color: #000000;
    }
    
    .issue-title {
      font-size: 13px;
      line-height: 1.3;
    }
    
    .issue-divider {
      margin: 4px 0;
      border: none;
      border-top: 1px solid #eee;
    }
    
    .issue-details {
      display: flex;
      justify-content: space-between;
      font-size: 11px;
      color: #000000;
      margin-top: 2px;
    }
    
    .issue-due-date {
      text-align: left;
    }
    
    .issue-estimated-hours {
      text-align: right;
    }
    
    .issue-link {
      color: #2c5aa0;
      text-decoration: none;
    }
    
    .issue-link:hover {
      text-decoration: underline;
    }
    
    .project-link {
      color: #2c5aa0;
      text-decoration: none;
    }
    
    .project-link:hover {
      text-decoration: underline;
    }
    
    .my-issue-card {
      min-height: 80px;
      cursor: move;
    }
      
    .my-issue-card-high-priority {
      min-height: 80px;
      cursor: move;
    }

    .my-issue-card-low-priority {
      min-height: 80px;
      cursor: move;
    }

    .dragged-issue-card {
      opacity: 0.8;
      transform: rotate(5deg);
    }

  </style>

  <!-- JavaScript for drag and drop -->
  <script>
    $(function() {
      // Card can be draggable
      $("[data-issue-id]").draggable({ 
        drag: function(event, ui) {
          ui.helper.addClass("dragged-issue-card");
        }
      });
      
      // Card can be droppable only within the same project row
      $(".kanban-column").droppable({
        accept: "[data-issue-id]",
        drop: function(event, ui) {
          // Get source and target project IDs
          var sourceProjectId = ui.draggable.closest('tr').find('.project-name').data('project-id');
          var targetProjectId = $(this).closest('tr').find('.project-name').data('project-id');
          
          // Check if it's the same project
          if (sourceProjectId !== targetProjectId) {
            // Cancel drop and reload page
            location.reload();
            return;
          }
          
          // Remove drag effect
          ui.helper.removeClass("dragged-issue-card");
          
          // Get issue ID and new status ID
          var issueId = ui.draggable.data("issue-id");
          var newStatusId = $(this).data("status-id");
          
          // Move card to new column
          $(this).append(ui.draggable.css('left','').css('top',''));
          
          // Update issue status via AJAX
          $.ajax({
            url: '<%= url_for(controller: "issue", action: "update_status") %>',
            type: 'POST',
            data: {
              'card_id': 'issue-' + issueId,
              'field_id': 'field-' + newStatusId + '-<%= @current_user.id %>',
              'comment': ''
            },
            dataType: 'json',
            success: function(data) {
              if (data.result == "NG") {
                alert("Operation not permitted. Please check your workflow settings.");
                location.reload();
              }
            },
            error: function(xhr, status, error) {
              alert("Something went wrong: " + error);
              location.reload();
            }
          });
        }
      });
    });
  </script>

</div> 